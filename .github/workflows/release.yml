name: Publish Release

on:
  workflow_dispatch:
    inputs:
      tag:
        required: true
        description: 'Release Tag'
      status:
        required: true
        description: 'Release Status (beta, stable)'

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: windows-2022

    steps:
    - uses: actions/checkout@v3.2.0
      with:
          fetch-depth: 0
          submodules: 'true'
     
    - name: Download Server
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        mkdir D:/BDS
        ServerLink=$(cat 'LINK.txt')
        curl -L -o D:/BDS/server.zip "$ServerLink"
        unzip D:/BDS/server.zip -d D:/BDS > /dev/null
      shell: bash

    - name: Build Library
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        cd SDK/Tools
        LibraryBuilder.exe -o ..\Lib D:\BDS 
      shell: cmd

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
    
    - name: MkDirs
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        mkdir D:/out/plugins
    
    - name: Copy Out Files
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        cp D:/a/QueryTPS/QueryTPS/build/Release/*.dll D:/out/plugins
        cp D:/a/QueryTPS/QueryTPS/build/Release/*.pdb D:/out/plugins
      shell: bash

    - name: Upload plugins
      uses: actions/upload-artifact@v1.0.0
      with:
        name: QueryTPS
        path: D:/out/plugins

    - name: Compress to zip
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        7z a D:/out/DespawnLags.zip D:/out/plugins
      shell: bash

    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        body_path: ${{ github.workspace }}\CHANGELOG.md
        files: |
          D:/out/plugins/QueryTPS.dll
          D:/out/plugins/QueryTPS.pdb
          D:/out/QueryTPS.zip
          
          
  publish_release:
    name: Publish release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: D:/out/

      - name: Create release
        if: github.event.inputs.status == 'stable'
        uses: ncipollo/release-action@v1
        with:
          prerelease: false
          tag: ${{ github.event.inputs.tag }}
          artifacts: |
            D:/out/plugins/QueryTPS.dll
            D:/out/plugins/QueryTPS.pdb
            D:/out/QueryTPS.zip
        env:
          GITHUB_REPOSITORY: LiteLDev/LiteLoaderBDS

      - name: Create pre-release
        if: github.event.inputs.status != 'stable'
        uses: ncipollo/release-action@v1
        with:
          prerelease: true
          tag: ${{ github.event.inputs.tag }}
          artifacts: |
            D:/out/plugins/QueryTPS.dll
            D:/out/plugins/QueryTPS.pdb
            D:/out/QueryTPS.zip
